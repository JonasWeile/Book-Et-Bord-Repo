//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCBookBord.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BTable", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class BTable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReservedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SeatsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reserved {
            get {
                return this.ReservedField;
            }
            set {
                if ((this.ReservedField.Equals(value) != true)) {
                    this.ReservedField = value;
                    this.RaisePropertyChanged("Reserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seats {
            get {
                return this.SeatsField;
            }
            set {
                if ((this.SeatsField.Equals(value) != true)) {
                    this.SeatsField = value;
                    this.RaisePropertyChanged("Seats");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Food", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Food : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FoodCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FoodCategoryId {
            get {
                return this.FoodCategoryIdField;
            }
            set {
                if ((this.FoodCategoryIdField.Equals(value) != true)) {
                    this.FoodCategoryIdField = value;
                    this.RaisePropertyChanged("FoodCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Beverage", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.SerializableAttribute()]
    public partial class Beverage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BeverageCategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BeverageCategoryId {
            get {
                return this.BeverageCategoryIdField;
            }
            set {
                if ((this.BeverageCategoryIdField.Equals(value) != true)) {
                    this.BeverageCategoryIdField = value;
                    this.RaisePropertyChanged("BeverageCategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IBookingService")]
    public interface IBookingService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllTables", ReplyAction="http://tempuri.org/IBookingService/GetAllTablesResponse")]
        MVCBookBord.ServiceReference1.BTable[] GetAllTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllTables", ReplyAction="http://tempuri.org/IBookingService/GetAllTablesResponse")]
        System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.BTable[]> GetAllTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllFreeTables", ReplyAction="http://tempuri.org/IBookingService/GetAllFreeTablesResponse")]
        MVCBookBord.ServiceReference1.BTable[] GetAllFreeTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllFreeTables", ReplyAction="http://tempuri.org/IBookingService/GetAllFreeTablesResponse")]
        System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.BTable[]> GetAllFreeTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllReservedTables", ReplyAction="http://tempuri.org/IBookingService/GetAllReservedTablesResponse")]
        MVCBookBord.ServiceReference1.BTable[] GetAllReservedTables();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllReservedTables", ReplyAction="http://tempuri.org/IBookingService/GetAllReservedTablesResponse")]
        System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.BTable[]> GetAllReservedTablesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateTable", ReplyAction="http://tempuri.org/IBookingService/CreateTableResponse")]
        void CreateTable(int seats, bool reserved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateTable", ReplyAction="http://tempuri.org/IBookingService/CreateTableResponse")]
        System.Threading.Tasks.Task CreateTableAsync(int seats, bool reserved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateTable", ReplyAction="http://tempuri.org/IBookingService/UpdateTableResponse")]
        void UpdateTable(int id, int seats, bool reserved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateTable", ReplyAction="http://tempuri.org/IBookingService/UpdateTableResponse")]
        System.Threading.Tasks.Task UpdateTableAsync(int id, int seats, bool reserved);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteTable", ReplyAction="http://tempuri.org/IBookingService/DeleteTableResponse")]
        void DeleteTable(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteTable", ReplyAction="http://tempuri.org/IBookingService/DeleteTableResponse")]
        System.Threading.Tasks.Task DeleteTableAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllFood", ReplyAction="http://tempuri.org/IBookingService/GetAllFoodResponse")]
        MVCBookBord.ServiceReference1.Food[] GetAllFood();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllFood", ReplyAction="http://tempuri.org/IBookingService/GetAllFoodResponse")]
        System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.Food[]> GetAllFoodAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateFood", ReplyAction="http://tempuri.org/IBookingService/CreateFoodResponse")]
        void CreateFood(int id, string name, decimal price, int foodCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateFood", ReplyAction="http://tempuri.org/IBookingService/CreateFoodResponse")]
        System.Threading.Tasks.Task CreateFoodAsync(int id, string name, decimal price, int foodCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateFood", ReplyAction="http://tempuri.org/IBookingService/UpdateFoodResponse")]
        void UpdateFood(int id, string name, decimal price, int foodCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateFood", ReplyAction="http://tempuri.org/IBookingService/UpdateFoodResponse")]
        System.Threading.Tasks.Task UpdateFoodAsync(int id, string name, decimal price, int foodCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteFood", ReplyAction="http://tempuri.org/IBookingService/DeleteFoodResponse")]
        void DeleteFood(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteFood", ReplyAction="http://tempuri.org/IBookingService/DeleteFoodResponse")]
        System.Threading.Tasks.Task DeleteFoodAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllBeverages", ReplyAction="http://tempuri.org/IBookingService/GetAllBeveragesResponse")]
        MVCBookBord.ServiceReference1.Beverage[] GetAllBeverages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/GetAllBeverages", ReplyAction="http://tempuri.org/IBookingService/GetAllBeveragesResponse")]
        System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.Beverage[]> GetAllBeveragesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateBeverage", ReplyAction="http://tempuri.org/IBookingService/CreateBeverageResponse")]
        void CreateBeverage(int id, string name, decimal price, int beverageCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/CreateBeverage", ReplyAction="http://tempuri.org/IBookingService/CreateBeverageResponse")]
        System.Threading.Tasks.Task CreateBeverageAsync(int id, string name, decimal price, int beverageCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateBeverage", ReplyAction="http://tempuri.org/IBookingService/UpdateBeverageResponse")]
        void UpdateBeverage(int id, string name, decimal price, int beverageCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/UpdateBeverage", ReplyAction="http://tempuri.org/IBookingService/UpdateBeverageResponse")]
        System.Threading.Tasks.Task UpdateBeverageAsync(int id, string name, decimal price, int beverageCategoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteBeverage", ReplyAction="http://tempuri.org/IBookingService/DeleteBeverageResponse")]
        void DeleteBeverage(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookingService/DeleteBeverage", ReplyAction="http://tempuri.org/IBookingService/DeleteBeverageResponse")]
        System.Threading.Tasks.Task DeleteBeverageAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookingServiceChannel : MVCBookBord.ServiceReference1.IBookingService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookingServiceClient : System.ServiceModel.ClientBase<MVCBookBord.ServiceReference1.IBookingService>, MVCBookBord.ServiceReference1.IBookingService {
        
        public BookingServiceClient() {
        }
        
        public BookingServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookingServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCBookBord.ServiceReference1.BTable[] GetAllTables() {
            return base.Channel.GetAllTables();
        }
        
        public System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.BTable[]> GetAllTablesAsync() {
            return base.Channel.GetAllTablesAsync();
        }
        
        public MVCBookBord.ServiceReference1.BTable[] GetAllFreeTables() {
            return base.Channel.GetAllFreeTables();
        }
        
        public System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.BTable[]> GetAllFreeTablesAsync() {
            return base.Channel.GetAllFreeTablesAsync();
        }
        
        public MVCBookBord.ServiceReference1.BTable[] GetAllReservedTables() {
            return base.Channel.GetAllReservedTables();
        }
        
        public System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.BTable[]> GetAllReservedTablesAsync() {
            return base.Channel.GetAllReservedTablesAsync();
        }
        
        public void CreateTable(int seats, bool reserved) {
            base.Channel.CreateTable(seats, reserved);
        }
        
        public System.Threading.Tasks.Task CreateTableAsync(int seats, bool reserved) {
            return base.Channel.CreateTableAsync(seats, reserved);
        }
        
        public void UpdateTable(int id, int seats, bool reserved) {
            base.Channel.UpdateTable(id, seats, reserved);
        }
        
        public System.Threading.Tasks.Task UpdateTableAsync(int id, int seats, bool reserved) {
            return base.Channel.UpdateTableAsync(id, seats, reserved);
        }
        
        public void DeleteTable(int id) {
            base.Channel.DeleteTable(id);
        }
        
        public System.Threading.Tasks.Task DeleteTableAsync(int id) {
            return base.Channel.DeleteTableAsync(id);
        }
        
        public MVCBookBord.ServiceReference1.Food[] GetAllFood() {
            return base.Channel.GetAllFood();
        }
        
        public System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.Food[]> GetAllFoodAsync() {
            return base.Channel.GetAllFoodAsync();
        }
        
        public void CreateFood(int id, string name, decimal price, int foodCategoryId) {
            base.Channel.CreateFood(id, name, price, foodCategoryId);
        }
        
        public System.Threading.Tasks.Task CreateFoodAsync(int id, string name, decimal price, int foodCategoryId) {
            return base.Channel.CreateFoodAsync(id, name, price, foodCategoryId);
        }
        
        public void UpdateFood(int id, string name, decimal price, int foodCategoryId) {
            base.Channel.UpdateFood(id, name, price, foodCategoryId);
        }
        
        public System.Threading.Tasks.Task UpdateFoodAsync(int id, string name, decimal price, int foodCategoryId) {
            return base.Channel.UpdateFoodAsync(id, name, price, foodCategoryId);
        }
        
        public void DeleteFood(int id) {
            base.Channel.DeleteFood(id);
        }
        
        public System.Threading.Tasks.Task DeleteFoodAsync(int id) {
            return base.Channel.DeleteFoodAsync(id);
        }
        
        public MVCBookBord.ServiceReference1.Beverage[] GetAllBeverages() {
            return base.Channel.GetAllBeverages();
        }
        
        public System.Threading.Tasks.Task<MVCBookBord.ServiceReference1.Beverage[]> GetAllBeveragesAsync() {
            return base.Channel.GetAllBeveragesAsync();
        }
        
        public void CreateBeverage(int id, string name, decimal price, int beverageCategoryId) {
            base.Channel.CreateBeverage(id, name, price, beverageCategoryId);
        }
        
        public System.Threading.Tasks.Task CreateBeverageAsync(int id, string name, decimal price, int beverageCategoryId) {
            return base.Channel.CreateBeverageAsync(id, name, price, beverageCategoryId);
        }
        
        public void UpdateBeverage(int id, string name, decimal price, int beverageCategoryId) {
            base.Channel.UpdateBeverage(id, name, price, beverageCategoryId);
        }
        
        public System.Threading.Tasks.Task UpdateBeverageAsync(int id, string name, decimal price, int beverageCategoryId) {
            return base.Channel.UpdateBeverageAsync(id, name, price, beverageCategoryId);
        }
        
        public void DeleteBeverage(int id) {
            base.Channel.DeleteBeverage(id);
        }
        
        public System.Threading.Tasks.Task DeleteBeverageAsync(int id) {
            return base.Channel.DeleteBeverageAsync(id);
        }
    }
}
